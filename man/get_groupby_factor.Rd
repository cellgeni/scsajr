% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scsajr.R
\name{get_groupby_factor}
\alias{get_groupby_factor}
\title{Determine grouping factor from a data.frame or SummarizedExperiment}
\usage{
get_groupby_factor(x, groupby, sep = "$")
}
\arguments{
\item{x}{Either
\itemize{
\item SummarizedExperiment (in which case its \code{colData()} is used) or
\item data.frame whose rows correspond to samples/pseudobulks.
}}

\item{groupby}{Either:
\itemize{
\item Vector of length \code{nrow(x)} or \code{ncol(x)} (for \code{SummarizedExperiment}): treated as the grouping factor directly.
\item Character scalar or vector of column names in \code{x} (or in \code{colData(x)} if \code{x} is a \code{SummarizedExperiment}):
those columns are concatenated row-wise (using \code{paste()} or \code{interaction()}) to form a grouping factor.
}}

\item{sep}{Character: char used to separate pasted values when \code{groupby} is multiple column names. Default is \code{"$"}.}
}
\value{
Character vector (or factor) of length \code{nrow(x)}, representing the grouping factor.
If \code{groupby} was already the same length as \code{nrow(x)}, it is returned unchanged.
Otherwise, it pastes together columns of \code{x}.
}
\description{
If \code{groupby} is a vector (e.g., a factor) whose length matches the number of rows of a \code{data.frame} or the number of columns of a \code{SummarizedExperiment}, it is returned unchanged.
Otherwise, if \code{groupby} is a character scalar or vector of column names present in the input,
those columns are pasted together row-wise (for a \code{data.frame}) or via \code{interaction()} (for factor columns in\code{SummarizedExperiment::colData()}) to form a single grouping factor.
}
\examples{
df <- data.frame(
  sample = paste0("S", 1:4),
  celltype = c("A", "A", "B", "B"),
  batch = c("X", "Y", "X", "Y")
)

# Case 1: groupby is a factor vector of correct length
grp1 <- get_groupby_factor(df, groupby = c("A", "A", "B", "B"))

# Case 2: groupby is one column name
grp2 <- get_groupby_factor(df, groupby = "celltype")

# Case 3: groupby is multiple column names
grp3 <- get_groupby_factor(df, groupby = c("celltype", "batch"))

# When x is a SummarizedExperiment
# sce$group_col <- factor(paste0(sce$sample_id, "_", sce$celltype))
# grp_se <- get_groupby_factor(sce, groupby = "group_col")

print(grp1)
print(grp2)
print(grp3)

}
\seealso{
\code{\link{filter_segments_and_samples}}, \code{link{test_all_groups_as}}
}
