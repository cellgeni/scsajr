% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scsajr.R
\name{find_rcomp_regions}
\alias{find_rcomp_regions}
\title{Find reverse‐complement palindrome regions in a sequence}
\usage{
find_rcomp_regions(seq, n = 1, shuffle_times = 0, start = 0)
}
\arguments{
\item{seq}{A character string representing a DNA sequence (may include ambiguous bases).}

\item{n}{Integer; initial k‐mer length to search for reverse complements. Default is 1.}

\item{shuffle_times}{Integer; number of times to apply \code{shuffle()} to \code{seq} before searching.
If \code{shuffle_times = 0} (default), no shuffling is performed.}

\item{start}{Integer; 1‐based offset to add to reported coordinates (useful if \code{seq} is a subsequence).
Default is 0.}
}
\value{
A data.frame of palindrome regions with columns:
\itemize{
\item \code{fpos}: forward start position of the region (1‐based, plus \code{start} offset),
\item \code{rpos}: reverse start position of the region (1‐based, plus \code{start} offset),
\item \code{len}: length of the palindrome region.
Row names are constructed as \code{"fpos-rpos:len"}.
If no palindromic regions are found, returns \code{NULL}.
}
}
\description{
Identifies regions in a DNA sequence where a k‐mer and its reverse complement appear,
potentially extending into longer palindromic regions. Optionally shuffles the sequence
before searching.
}
\details{
\enumerate{
\item If \code{shuffle_times > 0}, replaces \code{seq} with its shuffled version via \code{shuffle(seq, k = shuffle_times)}.
\item Builds a data.frame \code{nmers} with two columns:
\itemize{
\item \code{forward}: all \code{(length(seq) - n + 1)} k‐mers of length \code{n} starting at each position,
\item \code{reverse}: the reverse complement of each \code{forward} k‐mer.
\item \code{pos}: start positions \code{1:(length(seq) - n + 1)}.
}
\item Identifies all matching pairs \verb{(fpos, rpos)} where \code{forward[fpos] == reverse[rpos]}.
\item Iteratively extends matches to longer palindromes (extending both ends) wherever possible.
\item Constructs \code{rc_nmers_clean}, a data.frame of unique palindrome regions with:
\itemize{
\item \code{fpos}, \code{rpos} adjusted by \code{start},
\item \code{len} = final palindrome length.
}
}
}
\examples{
\dontrun{
seq <- "AGCTTTCGA"
find_rcomp_regions(seq, n = 3)
# Might find the 3‐mer "AGC" at pos 1 and its reverse complement "GCT" at pos 7, etc.
}

}
\seealso{
\code{\link{shuffle}}
}
