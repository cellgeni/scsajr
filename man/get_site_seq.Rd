% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scsajr.R
\name{get_site_seq}
\alias{get_site_seq}
\title{Extract sequence around a splice site from a genomic FASTA}
\usage{
get_site_seq(
  chr,
  pos,
  mars,
  fa,
  rev = FALSE,
  as_string = TRUE,
  to_upper = TRUE
)
}
\arguments{
\item{chr}{Character vector of chromosome names (matching names in \code{fa}).}

\item{pos}{Numeric vector of length equal to \code{chr}, specifying the genomic coordinate (1-based)  at the splice site for each locus.}

\item{mars}{Integer vector of length 2, giving the number of bases to include upstream (\code{mars[1]}) and downstream (\code{mars[2]}) of the specified position.}

\item{fa}{A named list of \code{DNAString} objects (e.g., from a BSgenome or a FASTA read into memory),
where names match chromosome names in \code{chr}. Used to extract raw sequence.}

\item{rev}{Logical; if \code{TRUE}, the reverse complement of the extracted sequence is returned. Default is \code{FALSE}.}

\item{as_string}{Logical; if \code{TRUE}, returns a single concatenated string per locus; if \code{FALSE},
returns a list of single-character vectors. Default is \code{TRUE}.}

\item{to_upper}{Logical; if \code{TRUE}, converts sequences to uppercase. Default is \code{TRUE}.}
}
\value{
If \code{as_string = TRUE}, a character vector of length \code{length(chr)}, where each element
is the concatenated sequence of length \code{mars[1] + mars[2] + 1} (position Â± flanks).
If  \code{as_string = FALSE}, a list of character vectors (one per locus).
}
\description{
Retrieves a nucleotide sequence flanking a specified genomic position for one or more loci.
}
\details{
For each index \code{i} in \code{seq_along(chr)}:
\enumerate{
\item Extract bases from \code{fa[[chr[i]]]} in the range \code{(pos[i] - mars[1]):(pos[i] + mars[2])}.
\item If \code{rev = TRUE}, take the reverse complement of that subsequence.
\item If \code{as_string = TRUE}, paste the bases into a single string.
\item If \code{to_upper = TRUE}, convert to uppercase using \code{toupper()}.
}
}
\examples{
\dontrun{
# Suppose 'fa' is a list with FASTA sequences for chr1 and chr2:
seq1 <- get_site_seq("chr1", 100000, mars = c(12, 5), fa, rev = FALSE)
seq2 <- get_site_seq(c("chr1", "chr2"), c(100000, 200000), mars = c(5, 3), fa, rev = TRUE)
}

}
