% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scsajr.R
\name{plot_segment_coverage}
\alias{plot_segment_coverage}
\title{Plot read coverage and splice junctions for a genomic segment across groups}
\usage{
plot_segment_coverage(
  sid = NULL,
  chr = NULL,
  start = NULL,
  stop = NULL,
  covs = NULL,
  celltypes = NULL,
  data_as = NULL,
  data_ge = NULL,
  groupby,
  barcodes,
  samples,
  gene_descr,
  scan_bam_flags = list(isNotPassingQualityControls = FALSE, isDuplicate = FALSE,
    isSupplementaryAlignment = FALSE, isSecondaryAlignment = FALSE),
  plot_junc_only_within = NA,
  min_junc_cov_f = 0.01,
  min_junc_cov = 3,
  gtf,
  ylim_by_junc = FALSE,
  ylim = NULL,
  oma = c(6, 34, 3, 1)
)
}
\arguments{
\item{sid}{Character; segment ID (row name of \code{data_as}) to center on. Required if \code{data_as} is given.}

\item{chr}{Character; chromosome name (e.g., \code{"chr1"}). Required if not using \code{sid}.}

\item{start}{Numeric; genomic start coordinate of plot window. If \code{sid} is provided, can be \code{NULL}.}

\item{stop}{Numeric; genomic stop coordinate of plot window. If \code{sid} is provided, can be \code{NULL}.}

\item{covs}{A named list of coverage objects (each produced by \code{getReadCoverage()} and then \code{sum_covs()}),
where names are group labels. If \code{NULL}, coverage is loaded from BAMs specified in \code{samples}.}

\item{celltypes}{Character vector of group labels (subset of those in \code{covs} and/or \code{data_as}) to plot.
If \code{NULL} and \code{sid} + \code{data_as} provided, all groups with PSI for \code{sid} are used.}

\item{data_as}{A \code{SummarizedExperiment} of pseudobulk splicing data (with assays \code{i}, \code{e}, optionally \code{psi}).
If provided along with \code{sid}, PSI boxplots per group will be drawn.}

\item{data_ge}{A \code{SummarizedExperiment} of pseudobulk gene‐expression data (with assay \code{cpm}).
If provided, a CPM boxplot per group is drawn for the gene of \code{sid}.}

\item{groupby}{Character; column name in \code{colData(data_as)} and \code{colData(data_ge)} defining grouping (e.g., \code{"celltype"}).
Required if \code{data_as} or \code{data_ge} is provided. Cannot be a length->1 vector.}

\item{barcodes}{A data.frame mapping \code{sample_id} and \code{barcode} to group labels (same \code{groupby} name). Required if raw coverage is loaded.}

\item{samples}{A data.frame with columns \code{sample_id} and \code{bam_path} for each sample. Required if raw coverage is loaded.}

\item{gene_descr}{A data.frame of gene annotations with row names = gene IDs, and columns \code{start}, \code{end}, \code{name}, \code{descr}.
Required if PSI or CPM are to be labeled or if transcript trigram is needed.}

\item{scan_bam_flags}{A list passed to \code{scanBamFlags()} when loading from BAM.
Default: \code{list(isNotPassingQualityControls = FALSE, isDuplicate = FALSE, isSupplementaryAlignment = FALSE, isSecondaryAlignment = FALSE)}.}

\item{plot_junc_only_within}{Logical or \code{NA}; if \code{TRUE}, only plot junctions fully within \verb{[start, stop]};
if \code{FALSE}, plot junctions with at least one end in the window; if \code{NA}, plot all junctions. Default \code{NA}.}

\item{min_junc_cov_f}{Numeric; fraction threshold for plotting junctions by fraction of coverage. Default \code{0.01}.}

\item{min_junc_cov}{Numeric; minimum junction coverage to plot. Default \code{3}.}

\item{gtf}{A data.frame of gene/transcript annotation with columns \code{gene_id}, \code{start}, \code{end}, \code{exon.col}, \code{cds.col}.
Only rows for the gene of \code{sid} are used if \code{sid} is provided.
Must be suitable for \code{plotTranscripts()}.}

\item{ylim_by_junc}{Logical; if \code{TRUE}, set y‐axis limits by junction coverage only. Default \code{FALSE}.}

\item{ylim}{Numeric vector of length 2 specifying y‐axis limits for coverage plots. If \code{NULL}, determined automatically.}

\item{oma}{Numeric vector of length 4 for \code{par(oma = ...)}. Default \code{c(6, 34, 3, 1)}.}
}
\value{
Invisibly returns the updated \code{covs} list (with any newly loaded coverage added). Plots are drawn as a multi‐panel figure:
\enumerate{
\item Left: CPM boxplot (if \code{data_ge} provided).
\item Middle: PSI boxplot (if \code{data_as} provided).
\item Right: Per‐group coverage and junction plots, one row per group.
\item Bottom: Transcript model plot for gene of \code{sid}.
}
}
\description{
This function visualizes read coverage, junction support, PSI (percent spliced-in), and CPM for a specified segment or genomic region across multiple groups.
It can either accept a segment ID (\code{sid}) and a \code{SummarizedExperiment} of pseudobulk splicing (\code{data_as}) to compute PSI,
or explicit \code{chr}, \code{start}, \code{stop}, and precomputed \code{covs} to plot raw coverage.
When both \code{data_as} and \code{sid} are provided, PSI boxplots are drawn;
when \code{data_ge} is provided, CPM boxplots or plots are drawn.
Finally, transcript models from a \code{gtf} data.frame are rendered below.
}
\details{
\enumerate{
\item Argument validation
\itemize{
\item \code{groupby} must be a single column name if either \code{data_as} or \code{data_ge} is provided.
\item If both \code{start}/\code{stop}/\code{chr} are \code{NULL}, \code{sid} + \code{data_as} must be provided.
\item If raw coverage must be loaded (i.e., \code{covs} is \code{NULL}), \code{samples}, \code{barcodes}, and \code{groupby} are required.
}
\item PSI boxplot (when \code{sid} + \code{data_as})
\itemize{
\item Subset \code{data_as} to row = \code{sid}.
\item Compute \code{psi <- assay(data_as, "psi")[sid, ]} if present, else call \code{calc_psi(data_as)[sid, ]}.
\item Split \code{psi} by group via \code{get_groupby_factor(data_as, groupby)} and draw horizontal boxplot via \code{boxplot(..., horizontal = TRUE)}.
}
\item CPM boxplot (when \code{data_ge} + \code{sid})
\itemize{
\item Determine \code{gid <- rowRanges(data_as)[sid, "gene_id"]}.
\item Extract CPM for that gene: \code{cpms <- assay(data_ge, "cpm")[gid, ]}.
\item Split by group and draw boxplot similarly.
}
\item Coverage and junction plots
\itemize{
\item If \code{covs} is \code{NULL}, for each group:
\itemize{
\item Filter \code{barcodes} to those with \code{groupby} = group label.
\item Call \code{getReadCoverage(bam_path, chr, start, stop, strand, scanBamFlags, tagFilter = list(CB = barcodes_in_group))} for each sample,
then merge via \code{sum_covs()}.
\item Store result in \code{covs[[group]]}.
}
\item Define layout: one column for coverage/junction per group (stacked), plus two left columns for boxplots if drawn.
\item For each group row:
\itemize{
\item Subset \code{cov <- covs[[group]]} to \verb{[start, stop]} via \code{subsetCov()}.
\item Compute \code{junc_filter} based on \code{plot_junc_only_within}, \code{min_junc_cov}, and \code{min_junc_cov_f}.
\item Determine \code{ylim_group <- if (!is.null(ylim)) ylim else if (ylim_by_junc) c(0, max(junc_scores)) else c(0, max(cov$cov))}.
\item Call \code{plotReadCov(cov, xlim = c(start, stop), ylab = "Coverage", main = group, plot.junc.only.within = plot_junc_only_within, min.junc.cov = min_junc_cov, min.junc.cov.f = min_junc_cov_f, ylim = ylim_group, xaxt = "n")}.
\item Draw \code{abline(h = 0)}.
}
}
\item Transcript model
\itemize{
\item Call \code{plotTranscripts(gtf_subset, new = TRUE, exon.col = NA, cds.col = NA, xlim = c(start, stop))} at the bottom.
}
\item Return value
Invisibly returns \code{covs} (a named list of per‐group coverage objects) so cached coverage can be reused.
}
}
\seealso{
\code{\link{sum_covs}}, \code{\link{subset_cov}}
}
